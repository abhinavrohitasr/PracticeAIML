import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
from sklearn.metrics import mean_squared_error
from sklearn.model_selection import train_test_split
from statsmodels.tsa.ar_model import AR
from sklearn.linear_model import LinearRegression




lpsDataset = pd.read_excel('G:\\Python\\lpsData.xls', sheet_name='dailyLpsDetails',  parse_dates=['Date'], index_col="Date")
#print(lpsDataset.head(5))
diff = lpsDataset.diff(periods=-1)
diff = diff[0:29]
x = lpsDataset.values
z = lpsDataset.shift(-1)
y = z.values
print(y)
train = x[0:24]
test = x[20:]
AR_predictions = []
LR_predictions = []

model_ar = AR(train)
model_ar_fit = model_ar.fit()
AR_predictions = model_ar_fit.predict(start=20, end=30)


"""
x_train, x_test, y_train, y_test = train_test_split(x[:29], y[:29], test_size=0.2)
reg = LinearRegression()
reg.fit(x_train, y_train)
score = reg.score(x_test, y_test)
print(score)
LR_predictions = reg.predict(x_test)

"""
plt.plot(test, label = "Real_Value")
plt.plot(AR_predictions, 'RED', label = "Prediced_Value")
#plt.plot(LR_predictions, 'GREEN', label = "Prediced_Value")
plt.xlabel('Date')
plt.ylabel('LPS Count')
plt.title('LPS Prediction Graph')
plt.legend()
plt.show()
